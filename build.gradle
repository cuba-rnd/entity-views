buildscript {
    ext.cubaVersion = '7.2.1'
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        maven {
            url 'https://dl.bintray.com/cuba-platform/main'
        }
        jcenter()
    }
    dependencies {
        classpath "com.haulmont.gradle:cuba-plugin:$cubaVersion"
        classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1+'
    }
}

def modulePrefix = 'entity-projections'
def artifactGlobalName = modulePrefix + "-global"
def artifactCoreName = modulePrefix + "-core"
def artifactWebName = modulePrefix + "-web"

def globalModule = project(artifactGlobalName)
def coreModule = project(artifactCoreName)
def webModule = project(artifactWebName)

def servletApi = 'javax.servlet:javax.servlet-api:3.1.0'

def artifactGroup = 'com.haulmont.addons.cuba.entity.projections'
def artifactVersion = '0.1.5'
def isArtifactSnapshot = true

apply(plugin: 'cuba')

cuba {
    artifact {
        group = artifactGroup
        version = artifactVersion
        isSnapshot = isArtifactSnapshot
    }
}

dependencies {
    appComponent("com.haulmont.cuba:cuba-global:$cubaVersion")
}

configure([globalModule, coreModule, webModule]) {

    apply(plugin: 'java')
    apply(plugin: 'maven')
    apply(plugin: 'maven-publish')
    apply(plugin: 'cuba')
    apply(plugin: 'com.jfrog.bintray')

    dependencies {
        compile('org.javassist:javassist:3.26.0-GA')
        testCompile('junit:junit:4.12')
    }

    task sourceJar(type: Jar) {
        from file('src')
        classifier = 'sources'
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc.destinationDir
    }

    javadocJar.dependsOn javadoc

    artifacts {
        archives sourceJar
        archives javadocJar
    }
}

configure(globalModule) {

    dependencies {
        if (!JavaVersion.current().isJava8()) {
            runtime('javax.xml.bind:jaxb-api:2.3.1')
            runtime('org.glassfish.jaxb:jaxb-runtime:2.3.1')
        }
    }


    jar {
        manifest {
            attributes('App-Component-Id': cuba.artifact.group)
            attributes('App-Component-Version': cuba.artifact.version + (cuba.artifact.isSnapshot ? '-SNAPSHOT' : ''))
        }
    }

    publishing {
        publications {
            publishGlobal(MavenPublication) {
                groupId = artifactGroup
                artifactId = artifactGlobalName
                version = artifactVersion + (cuba.artifact.isSnapshot ? '-SNAPSHOT' : '')
                from components.java
                artifact sourceJar
                artifact javadocJar
            }
        }
    }


    bintray {
        publications = ['publishGlobal']
    }
}

configure(coreModule) {

    def hsql = 'org.hsqldb:hsqldb:2.4.1'

    configurations {
        jdbc
        dbscripts
    }


    dependencies {
        compile(globalModule)
        jdbc(hsql)
        testRuntime(hsql)
        testCompile('junit:junit:4.12')
    }

    entitiesEnhancing {
        test {
            enabled = true
        }
    }
    publishing {
        publications {
            publishCore(MavenPublication) {
                groupId = artifactGroup
                artifactId = artifactCoreName
                version = artifactVersion + (cuba.artifact.isSnapshot ? '-SNAPSHOT' : '')
                from components.java
                artifact sourceJar
                artifact javadocJar
            }
        }
    }

    bintray {
        publications = ['publishCore']
    }

    task startDb(type: CubaHsqlStart) {
        dbName = 'entityviews'
    }

    task stopDb(type: CubaHsqlStop) {
        dbName = 'entityviews'
    }

    task createDb(dependsOn: assembleDbScripts, description: 'Creates local database', type: CubaDbCreation) {
        dbms = 'hsql'
        host = 'localhost'
        dbName = 'entityviews'
        dbUser = 'sa'
        dbPassword = ''
    }

    task updateDb(dependsOn: assembleDbScripts, description: 'Updates local database', type: CubaDbUpdate) {
        dbms = 'hsql'
        host = 'localhost'
        dbName = 'entityviews'
        dbUser = 'sa'
        dbPassword = ''
    }

}

configure(webModule) {

    dependencies {
        compileOnly(servletApi)
        compile(globalModule)
    }

    publishing {
        publications {
            publishWeb(MavenPublication) {
                groupId = artifactGroup
                artifactId = artifactWebName
                version = artifactVersion + (cuba.artifact.isSnapshot ? '-SNAPSHOT' : '')
                from components.java
                artifact sourceJar
                artifact javadocJar
            }
        }
    }

    bintray {
        publications = ['publishWeb']
    }


}


subprojects {
    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')

        // make files public ?
        publish = true
        // override existing artifacts?
        override = true

        // metadata
        pkg {
            repo = 'labs'           // your repository name
            name = 'cuba-entity-projections'  // package name - it will be created upon upload
            userOrg = 'cuba-platform'
            licenses = ["Apache-2.0"]
            websiteUrl = 'https://github.com/cuba-rnd/entity-views'
            issueTrackerUrl = 'https://github.com/cuba-rnd/entity-views/issues'
            vcsUrl = 'https://github.com/cuba-rnd/entity-views.git' // Mandatory for Open Source projects
            labels = ['cuba-platform', 'opensource']
            publicDownloadNumbers = true
        }
    }
}
